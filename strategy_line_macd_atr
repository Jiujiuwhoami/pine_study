// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © kX_WX

//@version=5
strategy(title="LINEMACDATR_STRAGY", shorttitle="LINEMACDATR_STRAGY", overlay = true, 
  initial_capital=1000, currency = "USD", commission_type=strategy.commission.percent, commission_value=0.08)
//------------------//
//     参数         //
//------------------//
float atr14     = ta.atr (14)
//------------------//
//   ATR input     //
//---------------- //
nMoneyFesk      = input  (1.5,"资金风控ATR因子")
qty             = input  (1000,"本金输入")
qtycon          = input  (0.02,"（开单金额/本金）百分比")
CanShort        = input  (true,'允许做空？')
CanAdd          = input  (true,'允许加仓？')
ShowMCLable     = input  (true,'显示MACD交叉标签？')
ShowMPRLable    = input  (true,'显示MACD点背离标签？')
loadMLRLable    = input  (true,'显示MACD线背离线？')
loadMPRLable    = input  (false,'显示MACD点背离线？')
loadshortLine   = input  (false,'添加短周期操盘线？')
loadlongLine    = input  (true,'添加长周期操盘线？')
ATRlossLine     = input  (true,'添加ATR止损线？')
nAtrLoss        = input  (5,'ATR价格线止损因子')
//------------------//
//   MACD input     //
//------------------//
Ma_Length_Long    =  input    (720,title = '长周期线')
Ma_Length_Short   =  input    (60,title = '短周期线')
fastLength   =  input    (12, 'MACD快线周期')
slowLength   =  input    (26, 'MACD慢线周期')
MACDLength   =  input    (9 , 'MACD移动周期')
backleninput =  input    (60, '背离计算长度(divergent len)')
//------------------//
//   MACD 参数计算  //
//------------------//
fastEma      =  ta.ema   (close, fastLength)
slowEma      =  ta.ema   (close, slowLength)
DIF          =  fastEma - slowEma
DEA          =  ta.ema   (DIF, MACDLength)
deltaMACD    =  DIF - DEA
gold_cross   =  ta.crossover   (DIF, DEA)                                                                             // MACD金叉
death_cross  =  ta.crossunder  (DIF, DEA) 
//------------------//
//   全局参数       //
//------------------//
QTY          =  qty*qtycon/(nMoneyFesk*atr14)                                                                         //开仓金额初始值
//--------------------------//
//   MACD 双线交叉价格跟踪  //
//--------------------------//
float gold_price   = 0
float death_price  = 0 
gold_price      := gold_cross  ? DIF   : gold_price[1] //金叉发生时，记录下dif
death_price     := death_cross ? DIF  : death_price[1] //死叉发生时，记录下dif
//------------------------//
//   MACD 点背离价格跟踪  //
//------------------------//
float BSRPMacd = 0
float TSRPMacd = 0
BSRPMacd      :=  gold_cross  ? math.min(low[ta.barssince(ta.change(deltaMACD < deltaMACD[1]))],low[(ta.barssince(ta.change(deltaMACD < deltaMACD[1])))+1]) : BSRPMacd[1]                //macd金叉时，找到当时的最小值
TSRPMacd      :=  death_cross ? math.max(high[ta.barssince(ta.change(deltaMACD > deltaMACD[1]))],high[(ta.barssince(ta.change(deltaMACD > deltaMACD[1])))+1]) : TSRPMacd[1]                //macd死叉时，找到当时的最大值
//--------------------------//
//   MACD 点背离            //
//--------------------------//
M_GR           =  BSRPMacd<BSRPMacd[1] and gold_price>gold_price[1]                           //macd金叉背离 信号
M_DR           =  TSRPMacd>TSRPMacd[1] and death_price<death_price[1]
//------------------//
//   MACD 线背离    //
//------------------//
lowest_DIF            = ta.lowest(DIF, backleninput)
lowest_price          = ta.lowest(low, backleninput)
reverse_bottom_signal = (lowest_price - low == 0) and (lowest_DIF < DIF * 1.382)                               // macd的dif线与价格发生背离

highest_DIF           = ta.highest(DIF, backleninput)
highest_price         = ta.highest(high, backleninput)
reverse_top_signal    = (highest_price - high == 0) and (highest_DIF > DIF * 1.382)                         
//---------------------------------//
//   MACD 顶底点背离状态跟踪       //
//根据M_GR 、M_DR背离信号          //
//---------------------------------//
float PriceByMacdPR   =  0
PriceByMacdPR         := M_GR ?  BSRPMacd  : M_DR ? TSRPMacd :  PriceByMacdPR[1] 

//---------------------------------//
//   MACD 线顶底价格状态跟踪       //
//根据reverse_bottom_signal背离信号//
//---------------------------------//
float PriceByMacdR   =  0
PriceByMacdR         := reverse_bottom_signal ?  lowest_price  : reverse_top_signal ? highest_price :  PriceByMacdR[1] 

//---------------------------------//
//   MACD 顶底线背离状态跟踪       //
//根据reverse_bottom_signal背离信号//
//---------------------------------//
int Macd_Reverse_Trail    =   0
Macd_Reverse_Trail        :=  reverse_bottom_signal ? 1 : reverse_top_signal ? 2 : (Macd_Reverse_Trail[1] == 1 and low <= PriceByMacdR[1]) ? 3 : (Macd_Reverse_Trail[1] == 2 and high >= PriceByMacdR[1]) ? 4 : Macd_Reverse_Trail[1]   // Macd_Reverse_Trail 为 1 底背离中；为 2 顶背离中；为3底背离打破；为4顶背离打破
//---------------------------------//
//   MACD 顶底点背离状态跟踪       //
//根据M_GR、M_DR背离信号           //
//---------------------------------//
int macd_Reverse_TrailByP = 0
macd_Reverse_TrailByP     :=  M_GR ? 1 : M_DR ? 2 : (macd_Reverse_TrailByP[1] == 1 and close <= PriceByMacdPR[1]) ? 3 : (macd_Reverse_TrailByP[1] == 2 and close >= PriceByMacdPR[1]) ? 4 : macd_Reverse_TrailByP[1]   
//--------------------------//
//  ATR波动线跟踪           //
//--------------------------//
float Atr_Trail_Price     =   na
ATRJUDGE                  =   close > Atr_Trail_Price[1]
ATRMAX                    =   math.max(nz(Atr_Trail_Price[1]),close - nAtrLoss*atr14)
ATRMIN                    =   math.min(nz(Atr_Trail_Price[1]),close + nAtrLoss*atr14)
Atr_Trail_Price           :=  ATRJUDGE ? ATRMAX : ATRMIN

//------------------//
//   绘图           //
//------------------//
plotshape(gold_cross and ShowMCLable, title="MACD金叉", style=shape.labelup, text="M_G", textcolor=color.white,
  location=location.belowbar, color=color.gray, size=size.small, offset=0)
plotshape(death_cross and ShowMCLable, title="MACD死叉", style=shape.labeldown, text="M_D", textcolor=color.white,
  location=location.abovebar, color=color.gray, size=size.small, offset=0)

plotshape(M_GR and ShowMPRLable, title="MACD金叉背离", style=shape.labelup, text="M_GR", textcolor=color.white,
  location=location.belowbar, color=color.red, size=size.small, offset=0)
plotshape(M_DR and ShowMPRLable, title="MACD死叉背离", style=shape.labeldown, text="M_DR", textcolor=color.white,
  location=location.abovebar, color=color.green, size=size.small, offset=0)

plotchar(atr14, "ATR波动点", "",location.top,size = size.large,color = color.white)
//plotchar(Atr_Trail_Price, "ATR波动点", "",location.top,size = size.large,color = color.white)
//--------------------------//
//  均线绘制                //
//--------------------------//
MA = ta.sma(close,Ma_Length_Long)
plot(loadlongLine  ? MA       : na              ,   title = '操盘线'               ,  color = color.yellow, linewidth = 3)
MA_Short = ta.sma(close,Ma_Length_Short)
plot(loadshortLine ? MA_Short : na              ,   title = '短周期操盘线'         ,  color = color.red, linewidth = 2)
//--------------------------//
//  绘制MACD线背离价格线    //
//--------------------------//
plot(loadMLRLable ? PriceByMacdR : na ,   title = 'MACD线背离价格线',     color = Macd_Reverse_Trail == 1 ? color.red : Macd_Reverse_Trail == 2 ? color.green : Macd_Reverse_Trail == 3 ? color.yellow : Macd_Reverse_Trail == 4 ? color.blue : na , linewidth = 3)
//--------------------------//
//  绘制MACD点底背离价格线  //
//--------------------------//
plot(loadMPRLable ? PriceByMacdPR : na ,  title = 'MACD点底背离价格线',   color = macd_Reverse_TrailByP==1 ? color.red : macd_Reverse_TrailByP == 2 ? color.green : macd_Reverse_TrailByP == 3 ? color.yellow : macd_Reverse_TrailByP == 4 ? color.blue : na , linewidth = 3)

//--------------------------//
//  绘制ATR价格止损线       //
//--------------------------//
plot(ATRlossLine ? Atr_Trail_Price[1] : na , title = 'ATR价格止损线', style = plot.style_cross, color = Atr_Trail_Price[1] < close ? color.red : Atr_Trail_Price[1] > close ? color.green : na, linewidth = 2)
//------------------//
//   持仓方向跟踪   //
//------------------//
bool entry_init = 0
entry_init      := strategy.position_size > 0 ? 1 : strategy.position_size < 0 ? 2 : 0
//------------------//
//   开仓条件       //
//------------------//
bool _condition1 =  Atr_Trail_Price > Atr_Trail_Price[1] ? true : Atr_Trail_Price < Atr_Trail_Price[1]  ? false : na         // 若为下降ATR阶梯 则布尔量true
bool _condition2 =  PriceByMacdPR >= MA ? true : PriceByMacdPR <= MA ? false : na
Buy              =  (macd_Reverse_TrailByP == 1 or macd_Reverse_TrailByP == 4) and close > Atr_Trail_Price[1] and PriceByMacdPR <= close and _condition1 == true and entry_init == 0
Sell             =  CanShort and (macd_Reverse_TrailByP == 2 or macd_Reverse_TrailByP == 3) and close < Atr_Trail_Price[1] and PriceByMacdPR >= close and _condition1 == false and  entry_init == 0
//------------------//
//   平仓条件       //
//------------------//
sell_closed_bull = close < Atr_Trail_Price[1] or macd_Reverse_TrailByP == 2 
sell_closed_bear = close > Atr_Trail_Price[1] or macd_Reverse_TrailByP == 1
//--------------------//
//   加仓计量器       //
//--------------------//
float count      = 0                                                                                                        //加仓计数器
float  add_judge = 0                                                                                                       //加仓标志位
if (strategy.position_size > 0 and not sell_closed_bull) or (strategy.position_size < 0  and  not sell_closed_bear)        //当有持仓且无平仓信号时
    if count[1] < 2 and (_condition1 == true or _condition1 == false)                                                                              //当出现加仓信号时
        count     := count[1] + 1
        QTY       := 1/count * QTY[1] * 0.5                                                                                //加仓量
        add_judge := 1
    if count[1]   == 2
        count     := 2
        add_judge := 2
//------------------//
//   加仓条件       //
//------------------//
add_buy_bull    =  add_judge == 1 and strategy.position_size > 0 and CanAdd 
add_sell_bear   =  add_judge == 1 and strategy.position_size < 0 and CanAdd 
//------------------//
//   市价平仓       //
//------------------//
strategy.close('long',     when = sell_closed_bull,   comment = 'Long loss by closed',    qty_percent = 100, alert_message = '')
strategy.close('short',    when = sell_closed_bear,   comment = 'Short loss by closed',    qty_percent = 100, alert_message = '')
//strategy.close('long',     when = low[0]  <= Loss_price_bull_temp,    comment = 'Long loss', qty = qty*qtycon/(nMoneyFesk*atr14), qty_percent = 100, alert_message = '')
//strategy.close('short',    when = high[0] >= Loss_price_bear_temp,    comment = 'Short loss', qty = qty*qtycon/(nMoneyFesk*atr14), qty_percent = 100, alert_message = '')
//------------------//
//      开仓        //
//------------------//
strategy.order('long',   strategy.long,  qty = QTY,  limit = close,
  oca_name = '', oca_type = strategy.oca.none, comment = 'long',    when = Buy or add_buy_bull, alert_message = '')
strategy.order('short',  strategy.short, qty = QTY,  limit = close,
  oca_name = '', oca_type = strategy.oca.none, comment = 'short',   when = Sell or add_sell_bear , alert_message = '')
//------------------//
//   限价平仓       //
//------------------//
//strategy.exit(id = 'exit long', from_entry = 'long', qty_percent = 100,limit = Close_price_bull_temp,stop = Loss_price_bull_temp, 
//  comment_profit = 'Long win',comment_loss = 'long loss',when = isBullishEngulfingCandle , alert_message ='')
//strategy.exit(id = 'exit short', from_entry = 'short', qty_percent = 100,limit = Close_price_bear_temp,stop = Loss_price_bear_temp,  
//  comment_profit = 'short win',comment_loss = 'short loss',when = isBearishEngulfingCandle , alert_message ='')
//------------------//
//   取消挂单       //
//------------------//
//strategy.cancel(id = 'long', when = high[0] >= PriceByMacdR)
//strategy.cancel(id = 'short', when = low[0] <= PriceByMacdR)
//------------------//
//   测试           //
//------------------//
//plotchar(strategy.position_size , "ATR波动点", "",location.top,size = size.large,color = color.white)

